# Generated from Cmash.g4 by ANTLR 4.13.2
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,59,413,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,
        32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,
        39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,
        45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,7,49,2,50,7,50,2,51,7,51,2,
        52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,7,56,2,57,7,57,2,58,7,
        58,2,59,7,59,1,0,1,0,1,1,1,1,1,2,1,2,1,3,1,3,1,4,1,4,1,4,1,4,1,4,
        1,4,1,4,1,5,1,5,1,6,1,6,1,7,1,7,1,7,1,7,1,8,1,8,1,8,1,8,1,8,1,8,
        1,9,1,9,1,9,1,9,1,9,1,10,1,10,1,10,1,10,1,10,1,11,1,11,1,11,1,11,
        1,11,1,11,1,11,1,12,1,12,1,12,1,12,1,12,1,13,1,13,1,13,1,14,1,14,
        1,14,1,15,1,15,1,16,1,16,1,17,1,17,1,17,1,18,1,18,1,18,1,19,1,19,
        1,19,1,20,1,20,1,20,1,21,1,21,1,21,1,22,1,22,1,22,1,23,1,23,1,23,
        1,24,1,24,1,24,1,24,1,25,1,25,1,25,1,25,1,26,1,26,1,26,1,27,1,27,
        1,27,1,28,1,28,1,28,1,29,1,29,1,29,1,30,1,30,1,30,1,31,1,31,1,32,
        1,32,1,33,1,33,1,33,1,34,1,34,1,34,1,35,1,35,1,36,1,36,1,37,1,37,
        1,38,1,38,1,39,1,39,1,40,1,40,1,41,1,41,1,42,1,42,1,42,1,42,1,42,
        1,42,1,43,1,43,1,43,1,43,1,43,1,44,1,44,5,44,264,8,44,10,44,12,44,
        267,9,44,1,45,3,45,270,8,45,1,45,4,45,273,8,45,11,45,12,45,274,1,
        46,3,46,278,8,46,1,46,4,46,281,8,46,11,46,12,46,282,1,46,1,46,5,
        46,287,8,46,10,46,12,46,290,9,46,1,46,1,46,1,47,3,47,295,8,47,1,
        47,4,47,298,8,47,11,47,12,47,299,1,47,1,47,5,47,304,8,47,10,47,12,
        47,307,9,47,1,47,1,47,3,47,311,8,47,1,47,4,47,314,8,47,11,47,12,
        47,315,3,47,318,8,47,1,48,1,48,1,48,3,48,323,8,48,1,48,1,48,1,49,
        1,49,1,49,1,50,1,50,5,50,332,8,50,10,50,12,50,335,9,50,1,50,1,50,
        1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,51,3,51,348,8,51,1,52,
        1,52,1,52,1,52,1,52,1,52,1,52,1,52,1,52,1,52,1,52,1,52,1,52,1,52,
        1,52,1,52,1,52,1,52,1,52,1,52,1,52,1,52,1,52,3,52,373,8,52,1,53,
        1,53,1,53,1,54,1,54,1,54,1,54,1,54,1,55,1,55,1,55,1,55,1,56,1,56,
        1,56,1,56,1,56,1,56,1,57,1,57,1,57,1,57,1,57,1,57,1,57,1,58,3,58,
        401,8,58,1,58,1,58,1,58,1,58,1,59,4,59,408,8,59,11,59,12,59,409,
        1,59,1,59,1,333,0,60,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,
        10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,37,19,39,20,41,
        21,43,22,45,23,47,24,49,25,51,26,53,27,55,28,57,29,59,30,61,31,63,
        32,65,33,67,34,69,35,71,36,73,37,75,38,77,39,79,40,81,41,83,42,85,
        43,87,44,89,45,91,46,93,47,95,48,97,49,99,0,101,50,103,51,105,52,
        107,53,109,54,111,55,113,56,115,57,117,58,119,59,1,0,10,1,0,65,90,
        3,0,48,57,65,90,97,122,1,0,48,57,2,0,70,70,102,102,2,0,69,69,101,
        101,2,0,43,43,45,45,2,0,39,39,92,92,7,0,39,39,48,48,92,92,98,98,
        110,110,114,114,116,116,1,0,97,122,2,0,9,9,32,32,438,0,1,1,0,0,0,
        0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,
        1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,
        1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,
        1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,
        1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,
        1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,
        1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,
        1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,1,0,0,0,0,83,
        1,0,0,0,0,85,1,0,0,0,0,87,1,0,0,0,0,89,1,0,0,0,0,91,1,0,0,0,0,93,
        1,0,0,0,0,95,1,0,0,0,0,97,1,0,0,0,0,101,1,0,0,0,0,103,1,0,0,0,0,
        105,1,0,0,0,0,107,1,0,0,0,0,109,1,0,0,0,0,111,1,0,0,0,0,113,1,0,
        0,0,0,115,1,0,0,0,0,117,1,0,0,0,0,119,1,0,0,0,1,121,1,0,0,0,3,123,
        1,0,0,0,5,125,1,0,0,0,7,127,1,0,0,0,9,129,1,0,0,0,11,136,1,0,0,0,
        13,138,1,0,0,0,15,140,1,0,0,0,17,144,1,0,0,0,19,150,1,0,0,0,21,155,
        1,0,0,0,23,160,1,0,0,0,25,167,1,0,0,0,27,172,1,0,0,0,29,175,1,0,
        0,0,31,178,1,0,0,0,33,180,1,0,0,0,35,182,1,0,0,0,37,185,1,0,0,0,
        39,188,1,0,0,0,41,191,1,0,0,0,43,194,1,0,0,0,45,197,1,0,0,0,47,200,
        1,0,0,0,49,203,1,0,0,0,51,207,1,0,0,0,53,211,1,0,0,0,55,214,1,0,
        0,0,57,217,1,0,0,0,59,220,1,0,0,0,61,223,1,0,0,0,63,226,1,0,0,0,
        65,228,1,0,0,0,67,230,1,0,0,0,69,233,1,0,0,0,71,236,1,0,0,0,73,238,
        1,0,0,0,75,240,1,0,0,0,77,242,1,0,0,0,79,244,1,0,0,0,81,246,1,0,
        0,0,83,248,1,0,0,0,85,250,1,0,0,0,87,256,1,0,0,0,89,261,1,0,0,0,
        91,269,1,0,0,0,93,277,1,0,0,0,95,294,1,0,0,0,97,319,1,0,0,0,99,326,
        1,0,0,0,101,329,1,0,0,0,103,347,1,0,0,0,105,372,1,0,0,0,107,374,
        1,0,0,0,109,377,1,0,0,0,111,382,1,0,0,0,113,386,1,0,0,0,115,392,
        1,0,0,0,117,400,1,0,0,0,119,407,1,0,0,0,121,122,5,44,0,0,122,2,1,
        0,0,0,123,124,5,61,0,0,124,4,1,0,0,0,125,126,5,40,0,0,126,6,1,0,
        0,0,127,128,5,41,0,0,128,8,1,0,0,0,129,130,5,115,0,0,130,131,5,116,
        0,0,131,132,5,114,0,0,132,133,5,117,0,0,133,134,5,99,0,0,134,135,
        5,116,0,0,135,10,1,0,0,0,136,137,5,123,0,0,137,12,1,0,0,0,138,139,
        5,125,0,0,139,14,1,0,0,0,140,141,5,105,0,0,141,142,5,110,0,0,142,
        143,5,116,0,0,143,16,1,0,0,0,144,145,5,102,0,0,145,146,5,108,0,0,
        146,147,5,111,0,0,147,148,5,97,0,0,148,149,5,116,0,0,149,18,1,0,
        0,0,150,151,5,118,0,0,151,152,5,111,0,0,152,153,5,105,0,0,153,154,
        5,100,0,0,154,20,1,0,0,0,155,156,5,99,0,0,156,157,5,104,0,0,157,
        158,5,97,0,0,158,159,5,114,0,0,159,22,1,0,0,0,160,161,5,100,0,0,
        161,162,5,111,0,0,162,163,5,117,0,0,163,164,5,98,0,0,164,165,5,108,
        0,0,165,166,5,101,0,0,166,24,1,0,0,0,167,168,5,98,0,0,168,169,5,
        111,0,0,169,170,5,111,0,0,170,171,5,108,0,0,171,26,1,0,0,0,172,173,
        5,38,0,0,173,174,5,38,0,0,174,28,1,0,0,0,175,176,5,124,0,0,176,177,
        5,124,0,0,177,30,1,0,0,0,178,179,5,94,0,0,179,32,1,0,0,0,180,181,
        5,33,0,0,181,34,1,0,0,0,182,183,5,43,0,0,183,184,5,43,0,0,184,36,
        1,0,0,0,185,186,5,45,0,0,186,187,5,45,0,0,187,38,1,0,0,0,188,189,
        5,42,0,0,189,190,5,61,0,0,190,40,1,0,0,0,191,192,5,47,0,0,192,193,
        5,61,0,0,193,42,1,0,0,0,194,195,5,37,0,0,195,196,5,61,0,0,196,44,
        1,0,0,0,197,198,5,43,0,0,198,199,5,61,0,0,199,46,1,0,0,0,200,201,
        5,45,0,0,201,202,5,61,0,0,202,48,1,0,0,0,203,204,5,60,0,0,204,205,
        5,60,0,0,205,206,5,61,0,0,206,50,1,0,0,0,207,208,5,62,0,0,208,209,
        5,62,0,0,209,210,5,61,0,0,210,52,1,0,0,0,211,212,5,38,0,0,212,213,
        5,61,0,0,213,54,1,0,0,0,214,215,5,94,0,0,215,216,5,61,0,0,216,56,
        1,0,0,0,217,218,5,124,0,0,218,219,5,61,0,0,219,58,1,0,0,0,220,221,
        5,61,0,0,221,222,5,61,0,0,222,60,1,0,0,0,223,224,5,33,0,0,224,225,
        5,61,0,0,225,62,1,0,0,0,226,227,5,60,0,0,227,64,1,0,0,0,228,229,
        5,62,0,0,229,66,1,0,0,0,230,231,5,60,0,0,231,232,5,61,0,0,232,68,
        1,0,0,0,233,234,5,62,0,0,234,235,5,61,0,0,235,70,1,0,0,0,236,237,
        5,43,0,0,237,72,1,0,0,0,238,239,5,45,0,0,239,74,1,0,0,0,240,241,
        5,42,0,0,241,76,1,0,0,0,242,243,5,47,0,0,243,78,1,0,0,0,244,245,
        5,37,0,0,245,80,1,0,0,0,246,247,5,46,0,0,247,82,1,0,0,0,248,249,
        5,59,0,0,249,84,1,0,0,0,250,251,5,112,0,0,251,252,5,114,0,0,252,
        253,5,105,0,0,253,254,5,110,0,0,254,255,5,116,0,0,255,86,1,0,0,0,
        256,257,5,114,0,0,257,258,5,101,0,0,258,259,5,97,0,0,259,260,5,100,
        0,0,260,88,1,0,0,0,261,265,7,0,0,0,262,264,7,1,0,0,263,262,1,0,0,
        0,264,267,1,0,0,0,265,263,1,0,0,0,265,266,1,0,0,0,266,90,1,0,0,0,
        267,265,1,0,0,0,268,270,5,45,0,0,269,268,1,0,0,0,269,270,1,0,0,0,
        270,272,1,0,0,0,271,273,7,2,0,0,272,271,1,0,0,0,273,274,1,0,0,0,
        274,272,1,0,0,0,274,275,1,0,0,0,275,92,1,0,0,0,276,278,5,45,0,0,
        277,276,1,0,0,0,277,278,1,0,0,0,278,280,1,0,0,0,279,281,7,2,0,0,
        280,279,1,0,0,0,281,282,1,0,0,0,282,280,1,0,0,0,282,283,1,0,0,0,
        283,284,1,0,0,0,284,288,5,46,0,0,285,287,7,2,0,0,286,285,1,0,0,0,
        287,290,1,0,0,0,288,286,1,0,0,0,288,289,1,0,0,0,289,291,1,0,0,0,
        290,288,1,0,0,0,291,292,7,3,0,0,292,94,1,0,0,0,293,295,5,45,0,0,
        294,293,1,0,0,0,294,295,1,0,0,0,295,297,1,0,0,0,296,298,7,2,0,0,
        297,296,1,0,0,0,298,299,1,0,0,0,299,297,1,0,0,0,299,300,1,0,0,0,
        300,301,1,0,0,0,301,305,5,46,0,0,302,304,7,2,0,0,303,302,1,0,0,0,
        304,307,1,0,0,0,305,303,1,0,0,0,305,306,1,0,0,0,306,317,1,0,0,0,
        307,305,1,0,0,0,308,310,7,4,0,0,309,311,7,5,0,0,310,309,1,0,0,0,
        310,311,1,0,0,0,311,313,1,0,0,0,312,314,7,2,0,0,313,312,1,0,0,0,
        314,315,1,0,0,0,315,313,1,0,0,0,315,316,1,0,0,0,316,318,1,0,0,0,
        317,308,1,0,0,0,317,318,1,0,0,0,318,96,1,0,0,0,319,322,5,39,0,0,
        320,323,3,99,49,0,321,323,8,6,0,0,322,320,1,0,0,0,322,321,1,0,0,
        0,323,324,1,0,0,0,324,325,5,39,0,0,325,98,1,0,0,0,326,327,5,92,0,
        0,327,328,7,7,0,0,328,100,1,0,0,0,329,333,5,34,0,0,330,332,7,1,0,
        0,331,330,1,0,0,0,332,335,1,0,0,0,333,334,1,0,0,0,333,331,1,0,0,
        0,334,336,1,0,0,0,335,333,1,0,0,0,336,337,5,34,0,0,337,102,1,0,0,
        0,338,339,5,116,0,0,339,340,5,114,0,0,340,341,5,117,0,0,341,348,
        5,101,0,0,342,343,5,102,0,0,343,344,5,97,0,0,344,345,5,108,0,0,345,
        346,5,115,0,0,346,348,5,101,0,0,347,338,1,0,0,0,347,342,1,0,0,0,
        348,104,1,0,0,0,349,373,5,61,0,0,350,351,5,42,0,0,351,373,5,61,0,
        0,352,353,5,47,0,0,353,373,5,61,0,0,354,355,5,37,0,0,355,373,5,61,
        0,0,356,357,5,43,0,0,357,373,5,61,0,0,358,359,5,45,0,0,359,373,5,
        61,0,0,360,361,5,60,0,0,361,362,5,60,0,0,362,373,5,61,0,0,363,364,
        5,62,0,0,364,365,5,62,0,0,365,373,5,61,0,0,366,367,5,38,0,0,367,
        373,5,61,0,0,368,369,5,94,0,0,369,373,5,61,0,0,370,371,5,124,0,0,
        371,373,5,61,0,0,372,349,1,0,0,0,372,350,1,0,0,0,372,352,1,0,0,0,
        372,354,1,0,0,0,372,356,1,0,0,0,372,358,1,0,0,0,372,360,1,0,0,0,
        372,363,1,0,0,0,372,366,1,0,0,0,372,368,1,0,0,0,372,370,1,0,0,0,
        373,106,1,0,0,0,374,375,7,8,0,0,375,376,7,8,0,0,376,108,1,0,0,0,
        377,378,7,8,0,0,378,379,7,8,0,0,379,380,7,8,0,0,380,381,7,8,0,0,
        381,110,1,0,0,0,382,383,7,8,0,0,383,384,7,8,0,0,384,385,7,8,0,0,
        385,112,1,0,0,0,386,387,7,8,0,0,387,388,7,8,0,0,388,389,7,8,0,0,
        389,390,7,8,0,0,390,391,7,8,0,0,391,114,1,0,0,0,392,393,7,8,0,0,
        393,394,7,8,0,0,394,395,7,8,0,0,395,396,7,8,0,0,396,397,7,8,0,0,
        397,398,7,8,0,0,398,116,1,0,0,0,399,401,5,13,0,0,400,399,1,0,0,0,
        400,401,1,0,0,0,401,402,1,0,0,0,402,403,5,10,0,0,403,404,1,0,0,0,
        404,405,6,58,0,0,405,118,1,0,0,0,406,408,7,9,0,0,407,406,1,0,0,0,
        408,409,1,0,0,0,409,407,1,0,0,0,409,410,1,0,0,0,410,411,1,0,0,0,
        411,412,6,59,0,0,412,120,1,0,0,0,19,0,265,269,274,277,282,288,294,
        299,305,310,315,317,322,333,347,372,400,409,1,6,0,0
    ]

class CmashLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    T__26 = 27
    T__27 = 28
    T__28 = 29
    T__29 = 30
    T__30 = 31
    T__31 = 32
    T__32 = 33
    T__33 = 34
    T__34 = 35
    T__35 = 36
    T__36 = 37
    T__37 = 38
    T__38 = 39
    T__39 = 40
    T__40 = 41
    T__41 = 42
    T__42 = 43
    T__43 = 44
    ID = 45
    INT = 46
    FLOAT = 47
    DOUBLE = 48
    CHAR_LITERAL = 49
    PLAIN_TEXT = 50
    BOOL_LITERAL = 51
    ASSIGNMENT_OPERATOR = 52
    IF = 53
    ELSE = 54
    FOR = 55
    WHILE = 56
    RETURN = 57
    END_OF_LINE = 58
    WS = 59

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "','", "'='", "'('", "')'", "'struct'", "'{'", "'}'", "'int'", 
            "'float'", "'void'", "'char'", "'double'", "'bool'", "'&&'", 
            "'||'", "'^'", "'!'", "'++'", "'--'", "'*='", "'/='", "'%='", 
            "'+='", "'-='", "'<<='", "'>>='", "'&='", "'^='", "'|='", "'=='", 
            "'!='", "'<'", "'>'", "'<='", "'>='", "'+'", "'-'", "'*'", "'/'", 
            "'%'", "'.'", "';'", "'print'", "'read'" ]

    symbolicNames = [ "<INVALID>",
            "ID", "INT", "FLOAT", "DOUBLE", "CHAR_LITERAL", "PLAIN_TEXT", 
            "BOOL_LITERAL", "ASSIGNMENT_OPERATOR", "IF", "ELSE", "FOR", 
            "WHILE", "RETURN", "END_OF_LINE", "WS" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", 
                  "T__32", "T__33", "T__34", "T__35", "T__36", "T__37", 
                  "T__38", "T__39", "T__40", "T__41", "T__42", "T__43", 
                  "ID", "INT", "FLOAT", "DOUBLE", "CHAR_LITERAL", "ESCAPE_SEQUENCE", 
                  "PLAIN_TEXT", "BOOL_LITERAL", "ASSIGNMENT_OPERATOR", "IF", 
                  "ELSE", "FOR", "WHILE", "RETURN", "END_OF_LINE", "WS" ]

    grammarFileName = "Cmash.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


